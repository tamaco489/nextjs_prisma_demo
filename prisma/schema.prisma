// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            BigInt     @id @default(autoincrement())
  auth0_user_id String     @db.Char(255) @unique
  email         String?    @db.Char(255) // nullable
  ekyc_status   EkycStatus
  created_at    DateTime   @default(now())
  updated_at    DateTime   @default(now()) @updatedAt

  profiles       Profile[]
  addresses      Address[]
  profile_images ProfileImage[]

  @@index([auth0_user_id])
}

enum EkycStatus {
  not_submitted
  reviewing
  approved
  rejected
}

model Profile {
  id               BigInt   @id @default(autoincrement())
  user_id          BigInt   @unique
  first_name       String   @db.Char(255)
  last_name        String   @db.Char(255)
  first_name_roman String   @db.Char(255)
  last_name_roman  String   @db.Char(255)
  birth_date       String   @db.Char(14)
  created_at       DateTime @default(now())
  updated_at       DateTime @default(now()) @updatedAt

  user User @relation(fields: [user_id], references: [id])

  @@index([user_id])
}

model Address {
  id         BigInt   @id @default(autoincrement())
  user_id    BigInt
  zip_code   String   @db.Char(7)
  prefecture String   @db.Char(255)
  city       String   @db.Char(255)
  street     String   @db.Char(255)
  other      String   @db.Char(255)
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  user User @relation(fields: [user_id], references: [id])

  @@index([user_id])
}

model ProfileImage {
  id          BigInt    @id @default(autoincrement())
  user_id     BigInt
  file_path   String    @db.Char(255)
  uploaded_at DateTime?
  updated_at  DateTime  @updatedAt
  created_at  DateTime  @default(now()) @updatedAt

  user User @relation(fields: [user_id], references: [id])

  @@index([user_id])
}
